(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{706:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"webpack内部原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack内部原理"}},[t._v("#")]),t._v(" webpack内部原理")]),t._v(" "),s("p",[t._v("webpack是一个流行的前端打包工具。打包，指处理某些文件将其输出为其他文件的能力。")]),t._v(" "),s("p",[t._v("在webpack打包的输入输出之间，还包括有如下中间部分：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("模块")])]),t._v(" "),s("li",[s("p",[t._v("入口起点")])]),t._v(" "),s("li",[s("p",[t._v("chunk")])]),t._v(" "),s("li",[s("p",[t._v("chunk组")])]),t._v(" "),s("li",[s("p",[t._v("其他中间部分")])])]),t._v(" "),s("h2",{attrs:{id:"webpack模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack模块"}},[t._v("#")]),t._v(" webpack模块")]),t._v(" "),s("p",[t._v("在nodejs模块中有ComminJs规范，可以使用"),s("code",[t._v("require")]),t._v("等语句进行模块的导入导出，而webpack的模块不仅能使用"),s("code",[t._v("require")]),t._v("，还能使用很多其他方式来表明模块依赖关系，如：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES2015 "),s("code",[t._v("import")]),s("OutboundLink")],1),t._v(" 语句")]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.commonjs.org/specs/modules/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommonJS"),s("OutboundLink")],1),t._v(" "),s("code",[t._v("require()")]),t._v(" 语句")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/amdjs/amdjs-api/blob/master/AMD.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("AMD"),s("OutboundLink")],1),t._v(" "),s("code",[t._v("define")]),t._v(" 和 "),s("code",[t._v("require")]),t._v(" 语句")]),t._v(" "),s("li",[t._v("css/sass/less 文件中的 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@import",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("@import")]),t._v(" 语句"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("stylesheet "),s("code",[t._v("url(...)")]),t._v(" 或者 HTML "),s("code",[t._v("<img src=...>")]),t._v(" 文件中的图片链接。")])]),t._v(" "),s("p",[t._v("webpack"),s("strong",[t._v("天生")]),t._v("（即无需额外配置loader）支持5种模块类型：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("CommonJS模块")])]),t._v(" "),s("li",[s("p",[t._v("ECMAScript模块")])]),t._v(" "),s("li",[s("p",[t._v("AMD模块")])]),t._v(" "),s("li",[s("p",[t._v("Assets资源模块")])]),t._v(" "),s("li",[s("p",[t._v("WebAssembly模块")])])]),t._v(" "),s("p",[t._v("而通过引入对应的loader，webpack能够处理更多其他编程语言和预处理器语法编写的模块。loader会告诉webpack如何处理非原生的模块。")]),t._v(" "),s("h2",{attrs:{id:"打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[t._v("#")]),t._v(" 打包")]),t._v(" "),s("p",[t._v("在打包过程中，模块会被合并成 chunk。 chunk 合并成 chunk 组，并形成一个通过模块互相连接的图("),s("code",[t._v("ModuleGraph")]),t._v(")。")]),t._v(" "),s("p",[t._v("一个入口起点对应一个chunk组，每个chunk组包含一个chunk。")]),t._v(" "),s("p",[t._v("如在"),s("code",[t._v("webpack.config.js")]),t._v("中配置：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("entry")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这会创建出一个名为 "),s("code",[t._v("main")]),t._v(" 的 chunk 组（"),s("code",[t._v("main")]),t._v(" 是入口起点的默认名称）。 此 chunk 组包含 "),s("code",[t._v("./index.js")]),t._v(" 模块。随着 parser 处理 "),s("code",[t._v("./index.js")]),t._v(" 内部的 import 时， 新模块就会被添加到此 chunk 中。")]),t._v(" "),s("p",[t._v("如果这样配置：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("entry")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("home")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./home.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("about")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./about.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这会创建出两个名为 home 和 about 的 chunk 组。 每个 chunk 组都有一个包含一个模块的 chunk：./home.js 对应 home，./about.js 对应 about")]),t._v(" "),s("h2",{attrs:{id:"chunk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunk"}},[t._v("#")]),t._v(" chunk")]),t._v(" "),s("p",[t._v("chunk有两种形式：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("initial(初始化)")]),t._v(" 是入口起点的 main chunk。此 chunk 包含为入口起点指定的所有模块及其依赖项。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("non-initial")]),t._v(" 是可以延迟加载的块。可能会出现在使用动态导入(dynamic imports)或者 SplitChunksPlugin时。")])])]),t._v(" "),s("p",[t._v("每个 chunk 都有对应的 "),s("strong",[t._v("asset(资源)")]),t._v("，即文件的打包结果。")]),t._v(" "),s("p",[t._v("看一个例子："),s("code",[t._v("./src/index.js")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ReactDOM "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.jsx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ReactDOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这会创建两个chunk：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("名为main的initial chunk，包括react、react-dom、./src/index.js及除./app.jsx的所有其他依赖模块")])]),t._v(" "),s("li",[s("p",[t._v("为./app.jsx创建的一个non-initial chunk，这个chunk没有名称，因此使用它的唯一id来命名。不过想要给它命名也是可以的，使用魔术注释（Magic Comment）即可，具体做法是在import的括号里。")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "app" */')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.jsx'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ReactDOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[t._v("#")]),t._v(" 输出")]),t._v(" "),s("p",[t._v("输出文件的名称会受配置中的两个字段的影响：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("output.filename")]),t._v("- 用于 "),s("code",[t._v("initial")]),t._v(" chunk 文件")]),t._v(" "),s("li",[s("code",[t._v("output.chunkFilename")]),t._v(" - 用于 "),s("code",[t._v("non-initial")]),t._v(" chunk 文件")])])])}),[],!1,null,null,null);a.default=e.exports}}]);